#!/usr/bin/env python
# -*- coding: utf-8 -*-

# MIT License

# Copyright (c) 2016 University of St Andrews

# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:

# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

import sys
import jinja2
import json
import pprint

JINJAPAGE = """
<!DOCTYPE html>
<style type="text/css">
</style>
<html lang="en">
<head>
    <title>{{Practical}}</title>
</head>
<body>
    <table style="width:100%">
    <tr><th></th>
    {% for name in testnames %}
    <th> {{ name }} </th>
    {% endfor %}
    </tr>

    {% for student in students %}
    <tr>
    <td> {{ student.subid }} </td>
    {% for name in testnames %}
    {% if name in student.dicttests %}
        {% if student.dicttests[name].pass %}
        <td bgcolor = "#BFB">Y</td>
        {% else %}
        <td bgcolor = "#FBB">N</td>
        {% endif %}
    {% else %}
        <td> </td>
    {% endif %}
    {% endfor %}
    </tr>
    {% endfor %}
    </table>
</body>
</html>
"""

if len(sys.argv) < 2:
    print("Usage: ./student_overview <list of json outputs from stacscheck>")
    print("Generate json from stacscheck with the --json flag")

jsons = []

for f in sys.argv[1:]:
    try:
        with open(f) as data_file:
            jsons.append(json.load(data_file))
    except EnvironmentError as e:
        print("Couldn't read JSON file: " + str(e))
        sys.exit(1)

allTestNames = sorted(set([ test["name"] for student in jsons for test in student["tests"] ]))

for student in jsons:
    student["dicttests"] = dict()
    for test in student["tests"]:
        student["dicttests"][test["name"]] = test

env = jinja2.Environment(autoescape=True)
template = env.from_string(JINJAPAGE)

print(template.render(testnames=allTestNames, students=jsons))
